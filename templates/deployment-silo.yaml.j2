apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ vendor }}-{{ id }}-silo
spec:
  replicas: {{ replicas_count_apps }}
  revisionHistoryLimit: {{ revision_history_limit | default('3') }}  {# https://kubernetes.io/docs/user-guide/deployments/#revision-history-limit  #}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ max_unavailable }}
      maxSurge: {{ max_surge | default('1') }}
  template:
    metadata:
      labels:
        app: {{ vendor }}-{{ id }}-silo
      annotations:
        prometheus.io/scrape: "{{ prometheus_scrape_metrics }}"
        prometheus.io/port: "{{ silo_metrics_port }}"
    spec:
      terminationGracePeriodSeconds: {{ termination_grace_period_seconds | default('60') }}  {# Секунды между SIGTERM и SIGKILL #}
      nodeSelector:
        role: {{ node_selector }}
      containers:
      - name: silo
        image: {{ silo_path }}:{{ broadway_version }}
        ports:
        - containerPort: {{ silo_metrics_port }}
        command: ["/app/Broadway.Silo"]
        resources:
          limits:
            cpu: {{ silo_limits_cpu }}
            memory: {{ silo_limits_memory }}
          requests:
            cpu: {{ silo_requests_cpu }}
            memory: {{ silo_requests_memory }}
        env:
        - name: DOCKER_TERM_KILL_TIMEOUT
          value: '10s'
        - name: ROADS_ENVIRONMENT
          value: '{{ roads_env }}'
        - name: ROADS_Cassandra__Keyspace
          value: '{{ cassandra_keyspace }}'
        - name: ROADS_Cassandra__ContactPoints
          value: roads-cassandra-0.roads-cassandra.erm-roads.svc.web-staging.os-n3.hw
        - name: ROADS_Cassandra__ReplicationFactor
          value: '1'
        - name: ROADS_MainKafkaCluster__BrokerEndpoints
          value: '{{ kafka_brokers }}'
        - name: ROADS_MainKafkaCluster__ConsumerGroupPostfix
          value: '{{ broadway_consumer_group_postfix }}'
        - name: ROADS_MainKafkaCluster__DataProjectionDispatchingTopic
          value: '{{ broadway_projection_dispatching_topic }}'
        - name: ROADS_ReferenceObjectsKafkaCluster__BrokerEndpoints
          value: '{{ broadway_ref_objects_cluster_kafka_brokers }}'
        - name: ROADS_ReferenceObjectsKafkaCluster__FlowCardsForErmTopic
          value: '{{ broadway_flow_cardsforerm_topic }}'
        - name: ROADS_ReferenceObjectsKafkaCluster__FlowKaleidoscopeTopic
          value: '{{ broadway_flow_kaleidoscope_topic }}'
        - name: ROADS_ReferenceObjectsKafkaCluster__FlowGeoClassifierTopic
          value: '{{ broadway_flow_geoclassifier_topic }}'
        - name: ROADS_ReferenceObjectsKafkaCluster__ConsumerGroupPostfix
          value: '{{ broadway_consumer_group_postfix }}'
        - name: ROADS_ConnectionStrings__BroadwayDataProjection
          value: 'Host={{ postgres_host }};Port={{ postgres_port }};Username={{ postgres_user }};Password={{ postgres_password }};Database={{ postgres_db }}'
