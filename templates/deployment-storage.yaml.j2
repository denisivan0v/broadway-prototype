apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ vendor }}-{{ id }}-storage
spec:
  replicas: {{ replicas_count_storage }}
  revisionHistoryLimit: {{ revision_history_limit | default('3') }}  {# https://kubernetes.io/docs/user-guide/deployments/#revision-history-limit  #}
  template:
    metadata:
      labels:
        app: {{ vendor }}-{{ id }}-storage
    spec:
      nodeSelector:
        role: {{ node_selector }}
      volumes:
      - name: postgres-data
        emptyDir: {}
      containers:
      - name: postgres
        image: {{ postgres_path }}:{{ postgres_version }}
        ports:
        - containerPort: {{ postgres_port }}
        lifecycle:
          postStart:
            exec:
              command: 
                - "/bin/sh"
                - "-c"
                - >
                  pg_isready -U {{ postgres_user }} -p {{ postgres_port }} -d {{ postgres_db }};
                  apt-get update -y && apt-get install -y wget;
                  wget https://raw.githubusercontent.com/denisivan0v/broadway-prototype/master/src/Broadway.Silo/OrleansAdoNetContent/PostgreSQL/PostgreSQL-Main.sql;
                  wget https://raw.githubusercontent.com/denisivan0v/broadway-prototype/master/src/Broadway.Silo/OrleansAdoNetContent/PostgreSQL/PostgreSQL-Clustering.sql;
                  wget https://raw.githubusercontent.com/denisivan0v/broadway-prototype/master/src/Broadway.Silo/OrleansAdoNetContent/PostgreSQL/PostgreSQL-Persistence.sql;
                  psql -U {{ postgres_user }} -p {{ postgres_port }} -d {{ postgres_db }} -f PostgreSQL-Main.sql;
                  psql -U {{ postgres_user }} -p {{ postgres_port }} -d {{ postgres_db }} -f PostgreSQL-Clustering.sql;
                  psql -U {{ postgres_user }} -p {{ postgres_port }} -d {{ postgres_db }} -f PostgreSQL-Persistence.sql;
        readinessProbe:
          exec:
            command: ["/bin/bash", "-c", "pg_isready -U {{ postgres_user }} -p {{ postgres_port }} -d {{ postgres_db }}"]
          initialDelaySeconds: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: {{ postgres_limits_cpu }}
            memory: {{ postgres_limits_memory }}
          requests:
            cpu: {{ postgres_requests_cpu }}
            memory: {{ postgres_requests_memory }}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
        env:
        - name: POSTGRES_DB
          value: '{{ postgres_db }}'
        - name: POSTGRES_USER
          value: '{{ postgres_user }}'
        - name: POSTGRES_PASSWORD
          value: '{{ postgres_password }}'
